version: 2

defaults: &defaults
  working_directory: ~/app
  docker:
    - image: circleci/node:6.10

jobs:
  install-deps:
    <<: *defaults
    steps:
      - checkout
      - restore_cache:
          key: dependency-cache-{{ checksum "package.json" }}
      - run:
          name: Install local yarn
          command: npm run yarn:install
      - run:
          name: Install dependencies using local yarn
          command: npm run yarn:install-deps
      - save_cache:
          key: dependency-cache-{{ checksum "package.json" }}
          paths:
            - ./node_modules
      - persist_to_workspace:
          root: ./
          paths:
            - .eslintrc
            - node_modules
            - src
            - package.json
            - webpack.config.js

  test:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ./
      - run:
          name: Run code checks
          command: npm run lint

  build:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ./
      - run:
          name: Build application
          command: npm run dist

  create-major-release:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ./
      - run:
          name: Create major version release
          command: npm version major

  create-minor-release:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ./
      - run:
          name: Create minor version release
          command: npm version minor

  create-patch-release:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ./
      - run:
          name: Create patch version release
          command: npm version patch

  publish-created-release:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ./
      - run:
          name: Release created version
          command:
            - git push origin $CIRCLE_BRANCH
            - git push --tags

workflows:
  version: 2
  build-test-and-deploy:
    jobs:
      - install-deps
      - test:
          requires:
            - install-deps
      - approve-major:
         type: approval
         requires:
           - test
      - approve-minor:
         type: approval
         requires:
           - test
      - approve-patch:
         type: approval
         requires:
           - test
      - create-major-release:
          requires:
            - approve-major
      - create-minor-release:
          requires:
            - approve-minor
      - create-patch-release:
          requires:
            - approve-patch
      - publish-created-release:
          requires:
            - create-major-release
            - create-minor-release
            - create-patch-release
