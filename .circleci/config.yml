version: 2

job-configuration: &job-configuration
  working_directory: ~/app
  docker:
    - image: circleci/node:6.10

prepare-git: &prepare-git
  name: Preparing git working directory
  command: |
    git clean -d -f
    git checkout -- .
    git config user.name "ci-bot"
    git config user.email "ci-bot@circleci.com"
    mkdir -p ~/.ssh/
    echo -e "Host github.com\n\tStrictHostKeyChecking no\n" > ~/.ssh/config

publish-to-git: &publish-to-git
  name: Publish created version
  command: |
    git push origin $CIRCLE_BRANCH
    git push --tags

jobs:
  install-deps:
    <<: *job-configuration
    steps:
      - checkout
      - restore_cache:
          key: dependency-cache-{{ checksum "package.json" }}
      - run:
          name: Install local yarn
          command: npm run yarn:install
      - run:
          name: Install dependencies using local yarn
          command: npm run yarn:install-deps
      - save_cache:
          key: dependency-cache-{{ checksum "package.json" }}
          paths:
            - ./node_modules
      - persist_to_workspace:
          root: ./
          paths:
            - .git
            - .eslintrc
            - node_modules
            - src
            - package.json
            - webpack.config.js

  test:
    <<: *job-configuration
    steps:
      - attach_workspace:
          at: ./
      - run:
          name: Run code checks
          command: npm run lint

  build:
    <<: *job-configuration
    steps:
      - attach_workspace:
          at: ./
      - run:
          name: Build application
          command: npm run dist
      - store_artifacts:
          path: ./dist
      - persist_to_workspace:
          root: ./
          paths:
            - dist

  deploy:
    <<: *job-configuration
    steps:
      - attach_workspace:
          at: ./
      - run:
          <<: *prepare-git
      - run:
          name: Deploy artifacts
          command: |
            git remote -v
            git remote set-url origin $GITHUB_UPSTREAM
            git remote -v
            git fetch -p
            git checkout gh-pages
            git clean -d -f
            git merge origin/gh-pages
            mkdir -p $CIRCLE_TAG
            ls -la ~/app
            cp -r ~/app/dist $CIRCLE_TAG
            git add $CIRCLE_TAG
            git commit -m "v$CIRCLE_TAG release for soap4.me"
            git push origin gh-pages

  release-major:
    <<: *job-configuration
    steps:
      - attach_workspace:
          at: ./
      - run:
          <<: *prepare-git
      - run:
          name: Bump major version
          command: npm version major -m "%s [skip ci]"
      - run:
          <<: *publish-to-git

  release-minor:
    <<: *job-configuration
    steps:
      - attach_workspace:
          at: ./
      - run:
          <<: *prepare-git
      - run:
          name: Bump minor version
          command: npm version minor -m "%s [skip ci]"
      - run:
          <<: *publish-to-git

  release-patch:
    <<: *job-configuration
    steps:
      - attach_workspace:
          at: ./
      - run:
          <<: *prepare-git
      - run:
          name: Bump patch version
          command: npm version patch -m "%s [skip ci]"
      - run:
          <<: *publish-to-git

workflows:
  version: 2

  build-and-deploy:
    jobs:
      - install-deps:
          filters:
            tags:
              only: /.*/
            branches:
              ignore: /.*/
      - build:
          requires:
            - install-deps
          filters:
            tags:
              only: /.*/
      - approve-deploy:
          type: approval
          requires:
            - build
          filters:
            tags:
              only: /.*/
      - deploy:
          requires:
            - approve-deploy
          filters:
            tags:
              only: /.*/

  test-and-release:
    jobs:
      - install-deps
      - test:
          requires:
            - install-deps
      - approve-major:
          type: approval
          requires:
            - test
          filters:
            branches:
              only: master
      - approve-minor:
          type: approval
          requires:
            - test
          filters:
            branches:
              only: master
      - approve-patch:
          type: approval
          requires:
            - test
          filters:
            branches:
              only: master
      - release-major:
          requires:
            - approve-major
      - release-minor:
          requires:
            - approve-minor
      - release-patch:
          requires:
            - approve-patch
